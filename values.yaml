replicaCount: 1

image:
  repository: vromero/activemq-artemis
  tag: 2.9.0
  pullPolicy: IfNotPresent
  pullSecrets: []

resources:
  limits:
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 256Mi

#javaOpts additional java options
javaOpts: ""

persistence:
  enabled: false
  accessModes:
    - ReadWriteOnce
  storageSize: 8Gi
  
metrics:
  ## metrics.enabled if `true` export prometheus metrics
  enabled: true

auth:
  clientUser: artemis
  clusterUser: artemis-internal

## clustering settings, see: https://activemq.apache.org/components/artemis/documentation/latest/clusters.html for reference. 
## All key-value pairs are automatically expanded in the cluster-connections xml
clustering:
  ## clustering.addresses prefix of addresses to include in clustering
  addresses: []
  ## clustering.retry-interval interval (in milliseconds) between retry attempts, after connection failures between nodes
  retryInterval: "500"
  ## clustering.retry-interval-multiplier multiplier (in milliseconds) used to increase the retry-interval after each reconnect attempt, default is 1.
  retrIintervalMultiplier: "1.5"
  ## clustering.max-retry-interval maximum delay (in milliseconds) for retries
  maxRetryInterval: "5000"

ha:
  ## ha.enabled if `true` a second stateful set running backups will be installed 
  enabled: false
  ## ha.failBack if `true` switch back from backup to live, when live becomes available again
  failBack: false
  ## ha.live settings for live servers. Automatically expanded
  live: {}
  ## ha.backup settings for backup servers. Automatically expanded
  backup: {}

## core additional core settings. Automatically expanded
core:
  ## core.criticalAnalyzerPolicy how to behave on critical errors detected, see https://activemq.apache.org/components/artemis/documentation/latest/critical-analysis.html
  criticalAnalyzerPolicy: SHUTDOWN

## podSecurityContext allows setting security context for the pod: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
# podSecurityContext:
## containerSecurityContext allows setting security context for the container: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
# containerSecurityContext:

nodeSelector: {}

tolerations: []

affinity: {}
